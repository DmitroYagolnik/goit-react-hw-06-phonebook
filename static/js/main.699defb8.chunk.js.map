{"version":3,"sources":["components/Filter/Filter.module.scss","transition/LogoSladeLeftTransition/LogoSladeLeftTransition.module.scss","transition/SladeRightTransition/SladeRightTransition.module.scss","transition/ScoleTransition/ScoleTransition.module.scss","components/ContactItem/ContactItem.module.scss","transition/SladeLeftTransition/SladeLeftTransition.module.scss","components/Logo/Logo.module.scss","components/ErrorComponent/ErrorComponent.module.scss","redux/typeActions.js","redux/actions.js","components/Logo/Logo.jsx","components/ErrorComponent/ErrorComponent.jsx","transition/LogoSladeLeftTransition/LogoSladeLeftTransition.jsx","transition/SladeRightTransition/SladeRightTransition.jsx","services/errorMessage.js","containers/HeaderComponent/HeaderComponent.jsx","containers/ContactForm/ContactForm.jsx","transition/ScoleTransition/ScoleTransition.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","redux/reducers.js","redux/store.js","index.jsx","containers/ContactForm/ContactForm.module.scss"],"names":["module","exports","typeActions","ADD_CONTACT","DELETE_CONTACT","UPDATE_FILTER","UPDATE_ERROR_MESSAGE","addContact","createAction","deleteContact","updateFilter","updateErrorMessage","Logo","logoTitle","className","style","LogoTitle","ErrorComponent","errorMessage","ErrorTextWrapper","LogoSladeLeftTransition","isShow","children","delay","parseInt","transition","CSSTransition","in","classNames","timeout","unmountOnExit","SladeRightTransition","DEFAULT_MESSAGE","ALREADY_EXISTS_MESSAGE","HeaderComponent","state","isShowLogo","this","setState","prevProps","prevState","props","errorMessageObj","setTimeout","showErrorMessage","Component","defaultProps","connect","INITIAL_STATE","name","number","ContactForm","handleChange","target","value","handleSubmitForm","event","preventDefault","id","uuidv4","FormContainer","onSubmit","labelContainer","type","inputForm","onChange","required","pattern","submitButton","contacts","ScoleTransition","filter","filterContainer","filterLabel","filterInput","e","ContactItem","elem","handleDelete","contactItem","deleteButton","onClick","ContactList","searchValue","contacttList","length","toUpperCase","includes","TransitionGroup","component","map","key","isShowFilter","reducer","createReducer","action","find","contact","payload","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","middleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.699defb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2sX98\",\"filterLabel\":\"Filter_filterLabel__3KWoH\",\"filterInput\":\"Filter_filterInput__1jZVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delay\":\"500ms\",\"enter\":\"LogoSladeLeftTransition_enter__3jLs9\",\"enterActive\":\"LogoSladeLeftTransition_enterActive__2bYX-\",\"exit\":\"LogoSladeLeftTransition_exit__2uqh6\",\"exitActive\":\"LogoSladeLeftTransition_exitActive__1Rhqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delay\":\"250ms\",\"enter\":\"SladeRightTransition_enter__1S0Uu\",\"enterActive\":\"SladeRightTransition_enterActive__2qOAD\",\"exit\":\"SladeRightTransition_exit__1kzvW\",\"exitActive\":\"SladeRightTransition_exitActive__1oXWa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delay\":\"250ms\",\"enter\":\"ScoleTransition_enter__yKi8L\",\"enterActive\":\"ScoleTransition_enterActive__1YtLh\",\"exit\":\"ScoleTransition_exit__2sckY\",\"exitActive\":\"ScoleTransition_exitActive__31KIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__3vmuW\",\"deleteButton\":\"ContactItem_deleteButton__3Kdvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delay\":\"250ms\",\"enter\":\"SladeLeftTransition_enter__3GTV7\",\"enterActive\":\"SladeLeftTransition_enterActive__1D2E5\",\"exit\":\"SladeLeftTransition_exit__wVV8W\",\"exitActive\":\"SladeLeftTransition_exitActive__27VI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogoTitle\":\"Logo_LogoTitle__4m5DJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorTextWrapper\":\"ErrorComponent_ErrorTextWrapper__1AqtF\"};","const typeActions = {\n  ADD_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n  UPDATE_FILTER: 'UPDATE_FILTER',\n  UPDATE_ERROR_MESSAGE: 'UPDATE_ERROR_MESSAGE',\n};\n\nexport default typeActions;\n","import { createAction } from '@reduxjs/toolkit';\nimport typeActions from './typeActions';\n\nexport const addContact = createAction(typeActions.ADD_CONTACT);\nexport const deleteContact = createAction(typeActions.DELETE_CONTACT);\nexport const updateFilter = createAction(typeActions.UPDATE_FILTER);\nexport const updateErrorMessage = createAction(\n  typeActions.UPDATE_ERROR_MESSAGE,\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Logo.module.scss';\n\nconst Logo = ({ logoTitle }) => {\n  return <h1 className={style.LogoTitle}>{logoTitle}</h1>;\n};\n\nLogo.propTypes = {\n  logoTitle: PropTypes.string.isRequired,\n};\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ErrorComponent.module.scss';\n\nconst ErrorComponent = ({ errorMessage }) => {\n  return (\n    <div className={style.ErrorTextWrapper}>\n      <p>{errorMessage}</p>\n    </div>\n  );\n};\n\nErrorComponent.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n};\n\nexport default ErrorComponent;\n","/* eslint-disable radix */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport transition from './LogoSladeLeftTransition.module.scss';\n\nconst LogoSladeLeftTransition = ({ isShow, children }) => {\n  const delay = parseInt(transition.delay);\n\n  return (\n    <CSSTransition\n      in={isShow}\n      classNames={transition}\n      timeout={delay}\n      unmountOnExit\n    >\n      {children}\n    </CSSTransition>\n  );\n};\n\nLogoSladeLeftTransition.propTypes = {\n  isShow: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default LogoSladeLeftTransition;\n","/* eslint-disable radix */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport transition from './SladeRightTransition.module.scss';\n\nconst SladeRightTransition = ({ isShow, children }) => {\n  const delay = parseInt(transition.delay);\n\n  return (\n    <CSSTransition\n      in={isShow}\n      classNames={transition}\n      timeout={delay}\n      unmountOnExit\n    >\n      {children}\n    </CSSTransition>\n  );\n};\n\nSladeRightTransition.propTypes = {\n  isShow: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default SladeRightTransition;\n","const errorMessage = {\n  DEFAULT_MESSAGE: '',\n  ALREADY_EXISTS_MESSAGE: 'Contact already exists!',\n};\n\nexport default errorMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateErrorMessage } from '../../redux/actions';\nimport Logo from '../../components/Logo/Logo';\nimport ErrorComponent from '../../components/ErrorComponent/ErrorComponent';\nimport LogoSladeLeftTransition from '../../transition/LogoSladeLeftTransition/LogoSladeLeftTransition';\nimport SladeRightTransition from '../../transition/SladeRightTransition/SladeRightTransition';\nimport errorMessageObj from '../../services/errorMessage';\n\nclass HeaderComponent extends Component {\n  static defaultProps = {\n    logoTitle: '',\n    errorMessage: '',\n  };\n\n  static propTypes = {\n    logoTitle: PropTypes.string,\n    errorMessage: PropTypes.string,\n    updateErrorMessage: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isShowLogo: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isShowLogo: true,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // eslint-disable-next-line no-shadow\n    const { errorMessage, updateErrorMessage } = this.props;\n    if (prevProps.errorMessage !== errorMessage) {\n      if (errorMessage !== errorMessageObj.DEFAULT_MESSAGE) {\n        setTimeout(() => {\n          updateErrorMessage(errorMessageObj.DEFAULT_MESSAGE);\n        }, 3000);\n      }\n    }\n  }\n\n  render() {\n    const { isShowLogo } = this.state;\n    const { logoTitle, errorMessage } = this.props;\n    const showErrorMessage = errorMessage !== errorMessageObj.DEFAULT_MESSAGE;\n    return (\n      <header>\n        <LogoSladeLeftTransition isShow={isShowLogo}>\n          <Logo logoTitle={logoTitle} />\n        </LogoSladeLeftTransition>\n        <SladeRightTransition isShow={showErrorMessage}>\n          <ErrorComponent errorMessage={errorMessage} />\n        </SladeRightTransition>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errorMessage: state.errorMessage,\n});\n\nexport default connect(mapStateToProps, { updateErrorMessage })(\n  HeaderComponent,\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addContact } from '../../redux/actions';\nimport style from './ContactForm.module.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitForm = event => {\n    event.preventDefault();\n    // eslint-disable-next-line no-shadow\n    const { addContact } = this.props;\n    const { name, number } = this.state;\n\n    const newContact = { name, number, id: uuidv4() };\n    addContact(newContact);\n    this.setState({\n      ...INITIAL_STATE,\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={style.FormContainer} onSubmit={this.handleSubmitForm}>\n        <label className={style.labelContainer}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={style.inputForm}\n            value={name}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label className={style.labelContainer}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={style.inputForm}\n            value={number}\n            onChange={this.handleChange}\n            pattern=\"^(\\+?\\d{1,3}\\(?-?\\s?\\d{2,3}\\)?-?\\s?)?\\d{3}-?\\s?\\d{2}-?\\s?\\d{2}$\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={style.submitButton}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nexport default connect(mapStateToProps, { addContact })(ContactForm);\n","/* eslint-disable radix */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport transition from './ScoleTransition.module.scss';\n\nconst ScoleTransition = ({ isShow, children }) => {\n  const delay = parseInt(transition.delay);\n\n  return (\n    <CSSTransition\n      in={isShow}\n      classNames={transition}\n      timeout={delay}\n      unmountOnExit\n    >\n      {children}\n    </CSSTransition>\n  );\n};\n\nScoleTransition.propTypes = {\n  isShow: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ScoleTransition;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilter } from '../../redux/actions';\nimport style from './Filter.module.scss';\n\n// eslint-disable-next-line no-shadow\nconst Filter = ({ updateFilter }) => {\n  const search = e => updateFilter(e.target.value);\n  return (\n    <div className={style.filterContainer}>\n      <label className={style.filterLabel}>\n        Find contact by name\n        <input type=\"search\" className={style.filterInput} onChange={search} />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  updateFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n  filter: state.filter,\n});\n\nexport default connect(mapStateToProps, { updateFilter })(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactItem.module.scss';\n\nconst ContactItem = ({ elem, handleDelete }) => {\n  const { id, name, number } = elem;\n  const deleteElem = () => handleDelete(id);\n  return (\n    <li className={style.contactItem} id={id}>\n      <span>{name}</span>\n      <span>{number}</span>\n\n      <button type=\"button\" className={style.deleteButton} onClick={deleteElem}>\n        &#10005;\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  elem: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","/* eslint-disable radix */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { deleteContact } from '../../redux/actions';\nimport ContactItem from '../ContactItem/ContactItem';\nimport transition from '../../transition/SladeLeftTransition/SladeLeftTransition.module.scss';\n\nconst SearchElems = (arrayElems, searchValue) => {\n  return arrayElems.filter(elem =>\n    elem.name.toUpperCase().includes(searchValue.toUpperCase()),\n  );\n};\n\n// eslint-disable-next-line no-shadow\nconst ContactList = ({ contacts, filter, deleteContact }) => {\n  const delay = parseInt(transition.delay);\n  const contacttList =\n    filter.length > 0 ? SearchElems(contacts, filter) : contacts;\n\n  return (\n    <TransitionGroup component=\"ul\">\n      {contacttList.map(elem => (\n        <CSSTransition\n          key={elem.id}\n          timeout={delay}\n          classNames={transition}\n          unmountOnExit\n        >\n          <ContactItem elem={elem} handleDelete={deleteContact} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.defaultProps = {\n  contacts: [],\n  filter: '',\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  filter: PropTypes.string,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n  filter: state.filter,\n});\n\nexport default connect(mapStateToProps, { deleteContact })(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport HeaderComponent from '../../containers/HeaderComponent/HeaderComponent';\nimport ContactForm from '../../containers/ContactForm/ContactForm';\nimport ScoleTransition from '../../transition/ScoleTransition/ScoleTransition';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport './App.module.css';\n\nconst App = ({ contacts }) => {\n  const isShowFilter = contacts.length > 2;\n  return (\n    <>\n      <HeaderComponent logoTitle=\"Phonebook\" />\n      <main>\n        <ContactForm />\n        <ScoleTransition isShow={isShowFilter}>\n          <Filter />\n        </ScoleTransition>\n\n        <ContactList />\n      </main>\n    </>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\n/*\n  Звертаємося до redux, щоб отримати інформацію по збереженим контактам.\n  Дана інформація буде використана для того, щоб дізнатися, \n  чи потрібно буде рендерити компонент <Filter /> \n*/\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport typeActions from './typeActions';\nimport contactsDefault from '../services/contacts.json';\nimport errorMessageObj from '../services/errorMessage';\n\nconst INITIAL_STATE = {\n  contacts: contactsDefault,\n  filter: '',\n  errorMessage: '',\n};\n\nconst reducer = createReducer(\n  { ...INITIAL_STATE },\n  {\n    [typeActions.ADD_CONTACT]: (state, action) => {\n      if (\n        state.contacts.find(contact => contact.name === action.payload.name)\n      ) {\n        return {\n          ...state,\n          errorMessage: errorMessageObj.ALREADY_EXISTS_MESSAGE,\n        };\n      }\n      return { ...state, contacts: [...state.contacts, action.payload] };\n    },\n    [typeActions.DELETE_CONTACT]: (state, { payload }) => ({\n      ...state,\n      contacts: state.contacts.filter(contact => contact.id !== payload),\n    }),\n    [typeActions.UPDATE_FILTER]: (state, { payload }) => ({\n      ...state,\n      filter: payload,\n    }),\n    [typeActions.UPDATE_ERROR_MESSAGE]: (state, { payload }) => ({\n      ...state,\n      errorMessage: payload,\n    }),\n  },\n);\n\nexport default reducer;\n","// import { configureStore } from '@reduxjs/toolkit';\n// import reducers from './reducers';\n\n// const store = configureStore({ reducer: reducers });\n\n// export default store;\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk],\n});\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App/App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"ContactForm_FormContainer__3O2YO\",\"labelContainer\":\"ContactForm_labelContainer__3i399\",\"inputForm\":\"ContactForm_inputForm__2XGjB\",\"submitButton\":\"ContactForm_submitButton__3Yc72\"};"],"sourceRoot":""}